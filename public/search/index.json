[{"content":"","date":"2022-07-09T00:00:00Z","image":"http://localhost:1313/2022/07/etcd-notes/img_hu51284747765675ec2ad7d8aa40138a32_896113_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/etcd-notes/","title":"etcd-notes"},{"content":"gRPC概述 gRPC 是一个高性能、开源和通用的 RPC 框架，面向移动和 HTTP/2 设计。\ngRPC使用场景 需要对接口进行严格约束。 对于性能有更高的要求\n","date":"2022-07-09T00:00:00Z","image":"http://localhost:1313/2022/07/grpc%E7%AE%80%E4%BB%8B/img_hudd373a82e0ceb34d23b175a1ef8020fd_386413_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/grpc%E7%AE%80%E4%BB%8B/","title":"grpc简介"},{"content":"\n","date":"2022-07-09T00:00:00Z","image":"http://localhost:1313/2022/07/https%E7%AE%80%E4%BB%8B/static/img_hud476b33944c499d2cb65151e37d9bcd0_881403_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/https%E7%AE%80%E4%BB%8B/","title":"HTTPS简介"},{"content":"","date":"2022-07-09T00:00:00Z","image":"http://localhost:1313/2022/07/http%E5%90%84%E7%89%88%E6%9C%AC%E5%8C%BA%E5%88%AB/img_hu83a171994bb98f360a5bcee0ed3e9848_758991_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/http%E5%90%84%E7%89%88%E6%9C%AC%E5%8C%BA%E5%88%AB/","title":"HTTP各版本区别"},{"content":"传输控制协议TCP协议概述 TCP最主要的特点 TCP的连接 可靠传输的工作原理 停止等待协议 连续ARQ协议 TCP可靠传输的实现 以字节为单位的滑动窗口 超时重传时间的选择 选择确认SACK TCP的流量控制 利用滑动窗口实现流量控制 TCP的传输效率 TCP的拥塞控制 拥塞控制的一般原理 TCP的拥塞控制方法 TCP的运输连接管理 连接建立 连接释放 TCP常见问题讨论 time_wait和close_wait产生过多的原因和解决方法 ","date":"2022-07-09T00:00:00Z","image":"http://localhost:1313/2022/07/%E7%BD%91%E7%BB%9C%E4%B9%8B%E8%BF%90%E8%BE%93%E5%B1%82tcp%E5%8D%8F%E8%AE%AE/static/img_hud01d8210e5842c1fcbf6a8cf2dff2ee2_821787_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/%E7%BD%91%E7%BB%9C%E4%B9%8B%E8%BF%90%E8%BE%93%E5%B1%82tcp%E5%8D%8F%E8%AE%AE/","title":"网络之运输层TCP协议"},{"content":"Gin是什么 为什么使用Gin 如何使用Gin 使用注意细节 参考引用 Gin官网\n","date":"2022-07-06T00:00:00Z","image":"http://localhost:1313/2022/07/go-gin%E7%AE%80%E4%BB%8B/img_hu36a4231796ebb099ecb5832b23544f08_673827_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/go-gin%E7%AE%80%E4%BB%8B/","title":"go-gin简介"},{"content":"【踩坑一】函数编写 package main import \u0026quot;fmt\u0026quot; func func1() error { return nil } // 推荐这样写，考虑因素：函数入参、返回值、函数局部变量初始化 func correctShow(ids ...int64) (err error) { keys := make([]string, 0, len(ids)) for _, id := range ids { keys = append(keys, fmt.Sprintf(\u0026quot;data_%d\u0026quot;, id)) } if err = func1(); err != nil { return } return } // 不推荐这样写 func errorShow(ids []int64) error { var keys []string for _, id := range ids { keys = append(keys, fmt.Sprintf(\u0026quot;data_%d\u0026quot;, id)) } if err := func1(); err != nil { return err } return nil } 【vendor】踩坑二","date":"2022-07-06T00:00:00Z","image":"http://localhost:1313/2022/07/golang%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/img_hu077198f7a0913080730abaa1524e5d48_648242_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/golang%E8%B8%A9%E5%9D%91%E8%AE%B0%E5%BD%95/","title":"golang踩坑记录"},{"content":"安全性问题 gorm自带有sql防注入，但是只限于其中的几个。\n","date":"2022-07-06T00:00:00Z","image":"http://localhost:1313/2022/07/gorm-notes/img_hu7574c1472824cd4db571bc109834f2a2_1494316_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/gorm-notes/","title":"gorm-notes"},{"content":"技术分享目的 影响力 需求实现类 技术优化类 参考引用 技术文章的选题，有没有什么方法论？\n","date":"2022-07-06T00:00:00Z","image":"http://localhost:1313/2022/07/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/img_huf1b14d0d7fb593b4953229bebc00b984_821598_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/07/%E6%8A%80%E6%9C%AF%E5%88%86%E4%BA%AB/","title":"技术分享"},{"content":"Golang概述 Channel GMP调度模型 Mutex WaitGroup ","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/golang%E7%AE%80%E4%BB%8B/static/img_hua1a6672696f4b0f4b969b0a99f631712_901853_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/golang%E7%AE%80%E4%BB%8B/","title":"golang简介"},{"content":"什么是微服务","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/interview-notes/interview-logo_hucf0d942532a4efc5f0af61c215b25d7b_210184_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/interview-notes/","title":"interview-notes"},{"content":"面试官要招什么样的人 基础团队：招聘初级开发，看重潜力、算法和技术热情，工作经验以及职业发展方向是否匹配 小公司：看重快速学习，快速了解业务、一个人带动几个人的能力 面试中 自信 语言精简，抓重点 面试前 面试考察内容 实战、基础、学习能力、拓展能力，认知能力\n面试中 自我介绍 项目介绍 技术问答 代码考核 反问环节 面试后 复盘反思 死记硬背的只是文字，融会贯通才是根本，而面试只是表象。\n","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/interview-notes/interview-logo_hucf0d942532a4efc5f0af61c215b25d7b_210184_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/interview-notes/","title":"interview-notes"},{"content":"并发编程 并发工具类：\nJVM JVM内存区域 垃圾回收","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/java-notes/img_hub24f56814457e9ee63d7c31f0649a54e_533328_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/java-notes/","title":"java-notes"},{"content":"k8s概述 自动化运维管理Docker(容器化)程序。\n核心特性 pod状态流转 ","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/k8s-notes/img_hu12775f9ad2d350f4eaadfc08e9ad4b40_713464_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/k8s-notes/","title":"k8s-notes"},{"content":"Kafka概述 体系架构、多副本机制、分区机制。\nKafka的生产者(客户端) Kafka的消费者(客户端) Kafka的服务端 Kafka的协调者 Kafka的存储层 Kafka日志结构 Kafka常见问题讨论 Kafka是如何保障数据不丢失的？ 如何解决Kafka数据丢失问题？ Kafka可以保障永久不丢失数据吗？ 如何保障Kafka中的消息是有序的？ 如何确定Kafka主题的分区数量？ 如何调整生产环境中Kafka主题的分区数量？ 如何重平衡Kafka集群？ 如何查看消费者组是否存在滞后消费？ PageCache 缓存最近被访问的数据 预读功能 消息顺序性问题 分区有序而不是主题有序。分区有序是通过offset实现的。\n分区机制 一个主题不可能只对应一个文件(单机I/O会成为性能瓶颈) 一个主题包含多个分区，每个分区是一个可追加的日志文件。不同分区在不同broker上。\n消息中间件选型 功能维度(延时队列) 性能维度() 可靠性和可用性 运维管理 社区力度和生态发展 ","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/kafka%E7%AE%80%E4%BB%8B/img_hu7f23b3a64bd1dfa706352f2ec1f13407_619022_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/kafka%E7%AE%80%E4%BB%8B/","title":"kafka简介"},{"content":"面试官要招什么样的人 基础团队：招聘初级开发，看重潜力、算法和技术热情，工作经验以及职业发展方向是否匹配 小公司：看重快速学习，快速了解业务、一个人带动几个人的能力 面试中 自信 语言精简，抓重点 面试前 面试考察内容 实战、基础、学习能力、拓展能力，认知能力\n面试中 自我介绍 项目介绍 技术问答 代码考核 反问环节 面试后 复盘反思 死记硬背的只是文字，融会贯通才是根本，而面试只是表象。\n","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/method-notes/interview-logo_hucf0d942532a4efc5f0af61c215b25d7b_210184_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/method-notes/","title":"method-notes"},{"content":"索引 索引底层数据结构选型 哈希表、二叉查找树、平衡二叉树、B树、B+树、跳表。\n事务 并发事务问题 脏读、不可重复读、幻读。\n日志 redo、undo、bin。\n锁 行锁和表锁。\n乐观锁MVCC 可重复读：事务开始的时候生成一个当前事务全局性的快照\n读提交：每次执行语句的时候都重新生成一次快照\n对于一个快照来说，它能够读到那些版本数据，要遵循以下规则：\n当前事务内的更新，可以读到；\n版本未提交，不能读到\n版本已提交，但是却在快照创建后提交的，不能读到 版本已提交，且是在快照创建前提交的，可以读到\n","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/mysql-notes/img_hu28fe21d521fd2003aa8ae5ffeef12874_671518_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/mysql-notes/","title":"mysql-notes"},{"content":"Redis概述 核心数据结构 持久化 RDB+AOF混用\nI/O多路复用 Redis常见问题讨论 击穿问题：底层数据库有数据而缓存内没有数据 穿透问题：底层数据库没有数据且缓存内也没有数据。解决方法：布隆过滤器 雪崩问题：缓存击穿的\u0026quot;大面积\u0026quot;版 ","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/redis-notes/img_hu0db6b5bb4988a377be6426e086456154_916120_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/redis-notes/","title":"redis-notes"},{"content":"柯里化","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/scala-notes/img_hu2db0081f3ed486b05026edba457bc988_945947_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/scala-notes/","title":"scala-notes"},{"content":"Spark概述 一个高效通用的内存型分布式计算框架。\nSpark特点：\n速度快 易用使用 通用性 运行模式多样 Spark作业基本运行原理 运行流程 ","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/spark-notes/spark-logo_huc6c3bb8fa3fad1d2b21b9cb888fa72ef_29346_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/spark-notes/","title":"spark-notes"},{"content":"做事方法论 另外我们做一件事的时候，需要时刻提醒自己，要想清楚三个问题：\n弄清楚，为什么做这件事？做这件事的价值是什么 去思考，如何做这件事？ 完成后的产出是什么，明确衡量标准 ","date":"2022-06-18T00:00:00Z","image":"http://localhost:1313/2022/06/%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91/img_huf8a5d43c43a496ea46c5f06d90045146_501717_120x120_fill_box_smart1_3.png","permalink":"http://localhost:1313/2022/06/%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91/","title":"业务开发"}]